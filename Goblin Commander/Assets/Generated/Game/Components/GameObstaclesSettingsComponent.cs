//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ObstaclesSettingsComponent obstaclesSettings { get { return (ObstaclesSettingsComponent)GetComponent(GameComponentsLookup.ObstaclesSettings); } }
    public bool hasObstaclesSettings { get { return HasComponent(GameComponentsLookup.ObstaclesSettings); } }

    public void AddObstaclesSettings(System.Collections.Generic.Dictionary<ObstacleType, ObstacleSettings> newMap) {
        var index = GameComponentsLookup.ObstaclesSettings;
        var component = CreateComponent<ObstaclesSettingsComponent>(index);
        component.Map = newMap;
        AddComponent(index, component);
    }

    public void ReplaceObstaclesSettings(System.Collections.Generic.Dictionary<ObstacleType, ObstacleSettings> newMap) {
        var index = GameComponentsLookup.ObstaclesSettings;
        var component = CreateComponent<ObstaclesSettingsComponent>(index);
        component.Map = newMap;
        ReplaceComponent(index, component);
    }

    public void RemoveObstaclesSettings() {
        RemoveComponent(GameComponentsLookup.ObstaclesSettings);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherObstaclesSettings;

    public static Entitas.IMatcher<GameEntity> ObstaclesSettings {
        get {
            if (_matcherObstaclesSettings == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ObstaclesSettings);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherObstaclesSettings = matcher;
            }

            return _matcherObstaclesSettings;
        }
    }
}
