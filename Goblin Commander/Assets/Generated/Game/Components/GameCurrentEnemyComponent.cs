//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CurrentEnemyComponent currentEnemy { get { return (CurrentEnemyComponent)GetComponent(GameComponentsLookup.CurrentEnemy); } }
    public bool hasCurrentEnemy { get { return HasComponent(GameComponentsLookup.CurrentEnemy); } }

    public void AddCurrentEnemy(GameEntity newValue) {
        var index = GameComponentsLookup.CurrentEnemy;
        var component = CreateComponent<CurrentEnemyComponent>(index);
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCurrentEnemy(GameEntity newValue) {
        var index = GameComponentsLookup.CurrentEnemy;
        var component = CreateComponent<CurrentEnemyComponent>(index);
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCurrentEnemy() {
        RemoveComponent(GameComponentsLookup.CurrentEnemy);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCurrentEnemy;

    public static Entitas.IMatcher<GameEntity> CurrentEnemy {
        get {
            if (_matcherCurrentEnemy == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CurrentEnemy);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCurrentEnemy = matcher;
            }

            return _matcherCurrentEnemy;
        }
    }
}
