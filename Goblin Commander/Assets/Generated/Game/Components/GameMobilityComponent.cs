//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public MobilityComponent mobility { get { return (MobilityComponent)GetComponent(GameComponentsLookup.Mobility); } }
    public bool hasMobility { get { return HasComponent(GameComponentsLookup.Mobility); } }

    public void AddMobility(float newMovementSpeed) {
        var index = GameComponentsLookup.Mobility;
        var component = CreateComponent<MobilityComponent>(index);
        component.MovementSpeed = newMovementSpeed;
        AddComponent(index, component);
    }

    public void ReplaceMobility(float newMovementSpeed) {
        var index = GameComponentsLookup.Mobility;
        var component = CreateComponent<MobilityComponent>(index);
        component.MovementSpeed = newMovementSpeed;
        ReplaceComponent(index, component);
    }

    public void RemoveMobility() {
        RemoveComponent(GameComponentsLookup.Mobility);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMobility;

    public static Entitas.IMatcher<GameEntity> Mobility {
        get {
            if (_matcherMobility == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Mobility);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMobility = matcher;
            }

            return _matcherMobility;
        }
    }
}
